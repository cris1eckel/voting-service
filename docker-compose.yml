version: '3'
services:
  postgres:
    image: postgres:13
    networks:
      - my_network
    environment:
      - POSTGRES_USER=voting-db-user
      - POSTGRES_PASSWORD=voting
      - POSTGRES_DB=votingdb
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    networks:
      - my_network
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    networks:
      - my_network
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  app:
    build: .
    networks:
      - my_network
    ports:
      - "8080:8080"
    depends_on:
      - kafka
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/votingdb
      SPRING_DATASOURCE_USERNAME: voting-db-user
      SPRING_DATASOURCE_PASSWORD: voting

networks:
  my_network:
    driver: bridge

volumes:
  postgres-data:
    driver: local